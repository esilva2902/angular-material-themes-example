
/**
 * Angular needs some theme to be loaded in order 
 * to look ok and takes all the animations.
 *
 * You have 2 options:
 *
 * 1. You can import any prebuilt themes from @angular.
 *    
 *    @import '../node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css'
 *
 * 2. You can define your own custom theme.
 */

 @import '~@angular/material/theming';
// Plus imports for other components in your app.

/**
 * Include the common styles for Angular Material. We include this here so that you only
 * have to load a single css file for Angular Material in your app.
 *
 * Be sure that you only ever include this mixin once!
 */
@include mat-core();

/**
 * Define the palettes for your theme using the Material Design palettes available in 
 * palette.scss (imported above). 
 * For each palette, you can optionally specify a default, lighter, and darker hue. 
 *
 * Available color palettes: https://material.io/design/color/
 */
//$my-theme-primary: mat-palette($mat-cyan);
//$my-theme-accent:  mat-palette($mat-teal, A200, A100, A400);

/**
 * The warn palette is optional (defaults to red):
 */
//$my-theme-warn: mat-palette($mat-red);

/** 
 * Create the theme object (a Sass map containing all of the palettes).
 */
//$my-theme: mat-dark-theme($my-theme-primary, $my-theme-accent, $my-theme-warn);
@import './themes/my-theme.scss';

@import './themes/my-second-theme.scss';

@import './app/example/parent/parent.component.scss-theme.scss';

@mixin my-components-theme($theme) {
  @include amte-parent-theme($theme);
}

/**
 * Include theme styles for core and each component used in your app.
 * Alternatively, you can import and @include the theme mixins 
 * for each component that you are using.
 */

.my-theme {
   @include angular-material-theme($my-theme);
   @include my-components-theme($my-theme);
 }

.my-second-theme {
  @include angular-material-theme($my-second-theme);
  @include my-components-theme($my-second-theme);
}






